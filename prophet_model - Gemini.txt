def _apply_intelligent_floor(self, predictions, dates):
    """智能下界保护（简化版：只做一件事 - 限制淡季预测上限）"""
    last_year_data = self.data.copy()
    date_col = next(
        col for col in ['Correct Event Time', 'Date', 'WeekStart', 'MonthStart'] 
        if col in last_year_data.columns
    )
    last_year_data[date_col] = pd.to_datetime(last_year_data[date_col])

    adjusted_predictions = []
    
    for i, pred_date in enumerate(dates):
        raw_pred = predictions.iloc[i]

        # ========== 简单粗暴：用月份匹配去年同期 ==========
        # 找去年同月份的所有数据（不管day/week）
        target_month = pred_date.month
        target_year = pred_date.year
        
        # 查找去年同月
        last_year_mask = (last_year_data[date_col].dt.month == target_month) & \
                         (last_year_data[date_col].dt.year == target_year - 1)
        
        # 如果没找到去年的，找前年的
        if not last_year_mask.any():
            last_year_mask = (last_year_data[date_col].dt.month == target_month) & \
                             (last_year_data[date_col].dt.year == target_year - 2)
        
        # 如果还是没找到，用历史同月的平均值
        if not last_year_mask.any():
            last_year_mask = (last_year_data[date_col].dt.month == target_month)
        
        # 计算去年同期的平均值
        if last_year_mask.any():
            last_year_value = last_year_data[last_year_mask]['Actual Pax'].mean()
        else:
            # 实在找不到，用整体均值
            last_year_value = self.historical_pax_mean

        # ========== 规则1：如果去年同期接近0，今年也强制为0 ==========
        if last_year_value <= 10:  # 阈值设为10
            adjusted_pred = 0.0
            logging.debug(
                f"{self.name} {pred_date.date()} [零值规则]: "
                f"去年同月均值={last_year_value:.1f}, 强制预测=0"
            )
            adjusted_predictions.append(adjusted_pred)
            continue

        # ========== 规则2：淡季（1-3月，10-12月）预测上限=去年同期2倍 ==========
        is_low_season = target_month in [1, 2, 3, 10, 11, 12]
        
        if is_low_season:
            max_allowed = last_year_value * 2.0
            if raw_pred > max_allowed:
                adjusted_pred = max_allowed
                logging.debug(
                    f"{self.name} {pred_date.date()} [淡季封顶]: "
                    f"原始={raw_pred:.1f}, 去年同月均值={last_year_value:.1f}, "
                    f"封顶={adjusted_pred:.1f}"
                )
                adjusted_predictions.append(adjusted_pred)
            else:
                adjusted_predictions.append(raw_pred)
        
        # ========== 规则3：旺季也不能太离谱，上限=历史最大值1.5倍 ==========
        else:
            max_allowed = self.max_historical_pax * 1.5
            if raw_pred > max_allowed:
                adjusted_pred = max_allowed
                logging.debug(
                    f"{self.name} {pred_date.date()} [旺季封顶]: "
                    f"原始={raw_pred:.1f}, 封顶={adjusted_pred:.1f}"
                )
                adjusted_predictions.append(adjusted_pred)
            else:
                adjusted_predictions.append(raw_pred)

    return pd.Series(adjusted_predictions)
